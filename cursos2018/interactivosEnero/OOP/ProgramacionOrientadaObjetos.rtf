{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red0\green0\blue0;\red255\green128\blue0;
\red255\green0\blue255;\red255\green39\blue18;\red0\green0\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf2 PROGRAMACI\'d3N ORIENTADA A OBJETOS\
\

\fs24 \cf3 Esta en una manera diferente de pensar acerca de nuestros programas.\
A diferencia de los tipos de dato que conocemos y usamos tales como \cf4 int\cf3  o \cf4 float\cf3 , que solo almacenan un valor, un objeto puede almacenar varios.\
un objeto tambi\'e9n es una manera de agrupar variables con sus relativas funciones.
\fs36 \cf2 \

\fs24 \cf3 UN OBJETO COMBINA FUNCIONES Y VARIABLES EN UNA S\'d2LA UNIDAD.\
Simplemente combinamos lo que hemos aprendido hasta ahora en un paquete m\'e1s manejable y entendible.\
\
A medida que nuestro c\'f3digo se vuelve m\'e1s complicado debemos empezar a pensarlo en t\'e9rminos de estructuras mas peque\'f1as que forman una estructura mas complicada.Es mas f\'e1cil mantener y escribir peque\'f1as y entendieses piezas de c\'f3digo que trabajan juntas que un largo pedazo que ejecuta todo a la vez.\
\
En el contexto de los objetos a sus variables las llamaremos 
\i\fs28 \cf5 campos 
\i0\fs24 \cf3 y a sus funciones como 
\fs28 \cf5 m\'e9todos \cf3 . Campos y m\'e9todos funcionan exactamente igual que las variables y funciones con que hemos trabajado.\

\fs24 \

\fs32 \cf6 Clases y objetos\
\

\fs24 \cf3 \
Antes de crear un objeto debemos definir una 
\fs28 clase. 
\fs24 una clase es la especificaci\'f3n de un objeto.\
\
Previo a escribir una clase necesitamos un poco de planeaci\'f3n. Pensemos en cuantos campos y m\'e9todos debe tener nuestra clase. por supuesto habr\'e1 cambios durante la escritura del programa , pero esto es un gran punto de inicio.\
\
Para nuestros campos es recomendable usar nombres claros y decidir el tipo de dato para cada uno.\
\
Para nuestros m\'e9todos de igual manera nombres claros y decidir los valores de retorno(si es que los tienen). los m\'e9todos son usados para cambiar los valores de los campos y realizar acciones basadas en los valores de los mismos.\
\
Por ejemplo:\
   comenzamos enlistando los campos.\
	\cf4 float \cf3 x;\
	\cf4 int \cf3 diameter;\
\cf0    Despu\'e9s es descubrir cuales m\'e9todos son \'fatiles para la clase \
\
	\cf7 void \cf3 ballDisplay()\
   \
   en este caso el m\'e9todo no regresa valor alguno por lo tanto es \cf7 void \cf0 \
}